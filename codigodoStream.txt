package rand;

import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.Serializable;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;

public class NomeRand implements Serializable {

    
    
    
	private char [] arrey = {'a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','u','v','w','x','y','z'};
	
	private char getRandomCharacter(){
		return arrey[random(arrey.length)];
		
	}
	
	private int random(int length){
		return new Random().nextInt(length);
	}
	
        
	protected NomeRand() {
		boolean running = true;
		int count = 0;
		int max = 200;
		while(running){
			StringBuilder sb = new StringBuilder();
			int size = random(25)+random(25);
			
			for(int i = 0 ; i < size ; i++){
			sb.append(getRandomCharacter());
			
			}
			
			System.out.println("String: "+sb.toString());
			
			if(count++ == max){
				running = false;
				System.out.println("finished.");
			}
		}
	}
	

		public static void main(String[] args) {
		
            try {    
                FileOutputStream fos = new FileOutputStream("arquivo.bin");
                ObjectOutputStream oos = new ObjectOutputStream(fos);
                
                oos.writeObject(new NomeRand());
                oos.close();
                System.out.println("gravado");
                
                
                
            } catch (FileNotFoundException ex) {
                Logger.getLogger(NomeRand.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(NomeRand.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            
            try {
                FileInputStream fis = new FileInputStream("arquivo.bin");
                ObjectInputStream ois = new ObjectInputStream(fis);
                NomeRand nome= (NomeRand)ois.readObject();
                System.out.println("leitura");
                ois.close();
                
                
                
                
            } catch (FileNotFoundException ex) {
                Logger.getLogger(NomeRand.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(NomeRand.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(NomeRand.class.getName()).log(Level.SEVERE, null, ex);
            }
		
		
	}
}